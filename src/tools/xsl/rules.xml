<?xml version="1.0" encoding="UTF-8"?>

<!--
// This file is part of XmlPlus package
// 
// Copyright (C)   2010   Satya Prakash Tripathi
//
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
-->

<root>

  <ruleGroup id="ComplexTypeDefinition.PropertiesCorrect">
    <title>Schema Component Constraint: Complex Type Definition Properties Correct</title>
    
    <rule id="ComplexTypeDefinition.PropertiesCorrect.1">
  The values of the properties of a complex type definition must be as described in the property tableau in The Complex Type Definition Schema Component (§3.4.1), modulo the impact of Missing Sub-components (§5.3).
    </rule>
    
    <rule id="ComplexTypeDefinition.PropertiesCorrect.2">
  If the {base type definition} is a simple type definition, the {derivation method} must be extension.
    </rule>
    
    <rule id="ComplexTypeDefinition.PropertiesCorrect.3">
  Circular definitions are disallowed, except for the ·ur-type definition·. That is, it must be possible to reach the ·ur-type definition· by repeatedly following the {base type definition}.
    </rule>
    
    <rule id="ComplexTypeDefinition.PropertiesCorrect.4">
  Two distinct attribute declarations in the {attribute uses} must not have identical {name}s and {target namespace}s.
    </rule>
    
    <rule id="ComplexTypeDefinition.PropertiesCorrect.5">
  Two distinct attribute declarations in the {attribute uses} must not have {type definition}s which are or are derived from ID.
    </rule>
  </ruleGroup>


</root>

